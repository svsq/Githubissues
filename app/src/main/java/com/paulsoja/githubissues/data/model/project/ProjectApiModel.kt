package com.paulsoja.githubissues.data.model.project

import com.google.gson.annotations.SerializedName

data class ProjectApiModel(
    @SerializedName("id") val id: Int,
    @SerializedName("description") val description: String,
    @SerializedName("name") val name: String,
    @SerializedName("name_with_namespace") val nameWithNamespace: String,
    @SerializedName("path") val path: String,
    @SerializedName("path_with_namespace") val pathWithNamespace: String,
    @SerializedName("created_at") val createdAt: String,
    @SerializedName("default_branch") val defaultBranch: String,
    @SerializedName("tag_list") val tagList: List<String> = listOf(),
    @SerializedName("ssh_url_to_repo") val sshUrlToRepo: String,
    @SerializedName("http_url_to_repo") val httpUrlToRepo: String,
    @SerializedName("web_url") val webUrl: String,
    @SerializedName("readme_url") val readmeUrl: String,
    @SerializedName("avatar_url") val avatarUrl: String,
    @SerializedName("star_count") val starCount: String,
    @SerializedName("forks_count") val forksCount: String,
    @SerializedName("last_activity_at") val lastActivityAt: String,
    @SerializedName("namespace") val nameSpace: NameSpaceApiModel,
    @SerializedName("_links") val links: LinksApiModel,
    @SerializedName("empty_repo") val emptyRepo: Boolean,
    @SerializedName("archived") val archived: Boolean,
    @SerializedName("visibility") val visibility: String,
    @SerializedName("resolve_outdated_diff_discussions") val resolveOutdatedDiffDiscussions: Boolean,
    @SerializedName("container_registry_enabled") val containerRegistryEnabled: Boolean,
    @SerializedName("merge_requests_enabled") val mergeRequestsEnabled: Boolean,
    @SerializedName("wiki_enabled") val wikiEnabled: Boolean,
    @SerializedName("jobs_enabled") val jobs_enabled: Boolean,
    @SerializedName("snippets_enabled") val snippetsEnabled: Boolean,
    @SerializedName("issues_access_level") val issuesAccessLevel: String,
    @SerializedName("repository_access_level") val repositoryAccessLevel: String,
    @SerializedName("wiki_access_level") val wikiAccessLevel: String,
    @SerializedName("builds_access_level") val buildsAccessLevel: String,
    @SerializedName("snippets_access_level") val snippetsAccessLevel: String,
    @SerializedName("shared_runners_enabled") val sharedRunnersEnabled: Boolean,
    @SerializedName("lfs_enabled") val lfsEnabled: Boolean,
    @SerializedName("creator_id") val creatorId: String,
    @SerializedName("import_status") val importStatus: String,
    @SerializedName("open_issues_count") val openIssuesCount: Int,
    @SerializedName("ci_default_git_depth") val ciDefaultGitDepth: Int,
    @SerializedName("public_jobs") val publicJobs: Boolean,
    @SerializedName("build_timeout") val buildTimeout: Int,
    @SerializedName("auto_cancel_pending_pipelines") val autoCancelPendingPipelines: String,
    @SerializedName("build_coverage_regex") val buildCoverageRegex: String,
    @SerializedName("ci_config_path") val ciConfigPath: String,
    @SerializedName("shared_with_groups") val sharedWithGroups: List<String> = listOf(),
    @SerializedName("only_allow_merge_if_pipeline_succeeds") val onlyAllowMergeIfPipelineSucceeds: Boolean,
    @SerializedName("request_access_enabled") val requestAccessEnabled: Boolean,
    @SerializedName("only_allow_merge_if_all_discussions_are_resolved") val onlyAllowMergeIfAllDiscussionsAreResolved: Boolean,
    @SerializedName("printing_merge_request_link_enabled") val printingMergeRequestLinkEnabled: Boolean,
    @SerializedName("merge_method") val mergeMethod: String,
    @SerializedName("auto_devops_enabled") val autoDevopsEnabled: Boolean,
    @SerializedName("auto_devops_deploy_strategy") val autoDevopsDeployStrategy: Boolean,
    @SerializedName("permissions") val permissions: PermissionsApiModel,
    @SerializedName("approvals_before_merge") val approvalsBeforeMerge: Int,
    @SerializedName("mirror") val mirror: Boolean,
    @SerializedName("external_authorization_classification_label") val externalAuthorizationClassificationLabel: String,
    @SerializedName("packages_enabled") val packagesEnabled: Boolean
)